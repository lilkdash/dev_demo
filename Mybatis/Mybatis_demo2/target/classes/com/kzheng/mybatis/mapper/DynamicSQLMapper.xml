<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kzheng.mybatis.mapper.DynamicSQLMapper">
    <!--List<Emp> getEmpByCondition(Emp emp);-->
    <sql id="getEmpSql">eid,emp_name,age,sex,email</sql>
    <select id="getEmpByCondition" resultType="Emp">
        select <include refid="getEmpSql"></include> from t_emp
        <!--where标签会根据条件是否存在自动去除条件内容前面的多余关键字where and or，但是内容后面的无法去除-->
        <!--<where>
            <if test="empName != null and empName!=''">
                and  emp_name=#{empName}
            </if>
            <if test="age != null and age!=''">
                and  age=#{age}
            </if>
            <if test="sex != null and sex!=''">
                and  sex=#{sex}
            </if>
        </where>-->
        <!--可在标签内容前后添加内容prefix、suffix
        可在标签内容前后去除内容suffixOverrides、prefixOverrides，
        若标签中有内容时，trim标签也没有任何效果-->
        <!--<trim prefix="where" suffix="" suffixOverrides="and|or" prefixOverrides="">
            <if test="empName != null and empName!=''">
                  emp_name=#{empName} and
            </if>
            <if test="age != null and age!=''">
                  age=#{age} or
            </if>
            <if test="sex != null and sex!=''">
                and  sex=#{sex}
            </if>
        </trim>-->
        <!--choose when otherwise 方式-->
        where
        <choose>
            <when test="empName!=null and empName!=''">
                emp_name=#{empName}
            </when>
            <when test="age != null and age!=''">
                age=#{age}
            </when>
            <otherwise>
                sex=#{sex}
            </otherwise>
        </choose>
    </select>
    <!--int updateAgeBatch(Integer[] eids);-->
    <update id="updateAgeBatchOld">
        update t_emp set age=18 where eid in
            <foreach collection="eids" item="eid" separator=","
             open="(" close=")">
                #{eid}
            </foreach>
    </update>
    <update id="updateAgeBatch">
        update t_emp set age=18 where
        <foreach collection="eids" item="eid" separator="or">
            eid=#{eid}
        </foreach>
    </update>
    <!--int insertEmpBatch(@Param("emps") List<Emp> emps);-->
    <insert id="insertEmpBatch">
        insert into t_emp values
        <foreach collection="emps" item="emp" separator=",">
            (null,#{emp.empName},#{emp.age},#{emp.sex},#{emp.email},null)
        </foreach>
    </insert>
</mapper>